{
  "content": "# MCP Reverse Text Service\n\nA Model Context Protocol (MCP) service that provides text manipulation tools including text reversal and analysis.\n\n## Features\n\n- **reverse_text**: Reverse the characters in a text string\n- **text_info**: Get detailed information about a text string (length, word count, character analysis)\n\n## Quick Start\n\n### Local Development\n\n```bash\n# Clone the repository\ngit clone https://github.com/NimbleBrainInc/mcp-reverse-text.git\ncd mcp-reverse-text\n\n# Install dependencies with uv\nuv sync\n\n# Run the server\nuv run python server.py\n\n# Or install in editable mode\nuv pip install -e .\npython server.py\n```\n\nThe server will start on `http://localhost:8000` with:\n- Health check: `GET /health`\n- MCP endpoint: `POST /mcp/` (note the trailing slash)\n\n### Docker\n\n```bash\n# Build the image\ndocker build -t nimblebrain/mcp-reverse-text .\n\n# Run the container\ndocker run -p 8000:8000 nimblebrain/mcp-reverse-text\n```\n\n## MCP Protocol Support\n\nThis server implements the full MCP (Model Context Protocol) specification:\n\n- **Transport**: Streamable HTTP with Server-Sent Events (SSE)\n- **Session Management**: Proper initialization handshake required\n- **Protocol Version**: 2024-11-05\n- **Framework**: FastMCP 2.11.2\n- **Python Version**: 3.13+\n\n### Session Management\n\nThe server requires proper MCP initialization:\n\n1. **Initialize**: Send `initialize` request to establish session\n2. **Initialized**: Send `notifications/initialized` notification \n3. **Tools**: Use session ID for all subsequent requests\n\n## API Usage\n\n### Complete MCP Example\n\n```bash\n# Step 1: Initialize session\nINIT_RESPONSE=$(curl -s -i -X POST http://localhost:8000/mcp/ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json, text/event-stream\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"initialize\",\n    \"params\": {\n      \"protocolVersion\": \"2024-11-05\",\n      \"capabilities\": {},\n      \"clientInfo\": {\"name\": \"example-client\", \"version\": \"1.0.0\"}\n    },\n    \"id\": 1\n  }')\n\n# Extract session ID\nSESSION_ID=$(echo \"$INIT_RESPONSE\" | grep -i \"mcp-session-id\" | cut -d' ' -f2 | tr -d '\\r')\n\n# Step 2: Send initialized notification\ncurl -X POST http://localhost:8000/mcp/ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json, text/event-stream\" \\\n  -H \"mcp-session-id: $SESSION_ID\" \\\n  -d '{\"jsonrpc\": \"2.0\", \"method\": \"notifications/initialized\"}'\n\n# Step 3: List available tools\ncurl -X POST http://localhost:8000/mcp/ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json, text/event-stream\" \\\n  -H \"mcp-session-id: $SESSION_ID\" \\\n  -d '{\"jsonrpc\": \"2.0\", \"method\": \"tools/list\", \"id\": 2}'\n\n# Step 4: Call reverse_text tool\ncurl -X POST http://localhost:8000/mcp/ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json, text/event-stream\" \\\n  -H \"mcp-session-id: $SESSION_ID\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"tools/call\", \n    \"params\": {\n      \"name\": \"reverse_text\",\n      \"arguments\": {\"text\": \"Hello World\"}\n    },\n    \"id\": 3\n  }'\n```\n\n### Simple Health Check\n\n```bash\ncurl http://localhost:8000/health\n```\n\n## Development\n\n### Testing\n\n```bash\n# Install with dev dependencies\nuv sync --group dev\n\n# Run tests (includes async MCP client tests)\nuv run python -m pytest\n\n# Run with coverage\nuv run python -m pytest --cov=server\n\n# Run specific test\nuv run python -m pytest tests/test_server.py::test_reverse_text_tool -v\n```\n\n### Building and Deployment\n\n```bash\n# Build Docker image\ndocker build -t mcp-reverse-text .\n\n# Test the container\ndocker run -d --name mcp-test -p 8000:8000 mcp-reverse-text\n\n# Check health\ncurl http://localhost:8000/health\n\n# Clean up\ndocker stop mcp-test && docker rm mcp-test\n```\n\n### Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Add tests\n5. Submit a pull request\n\n## About\n\nPart of the [NimbleTools](https://www.nimbletools.ai) ecosystem.\nFrom the makers of [NimbleBrain](https://www.nimblebrain.ai). \n\n## License\n\nMIT License - see LICENSE file for details.",
  "fetchedAt": 1758568458054,
  "etag": "W/\"e8dfd677ebac7b4d71aa7cab1d77a51e9eac819c7ee640d6efe801db4af6833c\""
}