{
  "content": "# MCP Finnhub Server\n\nA comprehensive financial market data and news service powered by the Finnhub API. This MCP server provides real-time stock quotes, company profiles, financial metrics, analyst recommendations, and market news.\n\n## Features\n\n- **get_market_news**: Get latest market news by category (general, forex, crypto, merger)\n- **get_stock_quote**: Get real-time stock quotes with pricing and trading data\n- **get_company_profile**: Get detailed company information and profiles\n- **get_basic_financials**: Get key financial metrics and ratios\n- **get_recommendation_trends**: Get analyst recommendation trends and ratings\n\n## MCP Protocol Endpoints\n\n- `GET /health` - Health check endpoint\n- `POST /mcp` - Main MCP protocol endpoint for all tool interactions\n- Available tools accessible via MCP protocol:\n  - `get_market_news` - Get latest market news by category\n  - `get_stock_quote` - Get real-time stock quotes\n  - `get_company_profile` - Get detailed company information\n  - `get_basic_financials` - Get key financial metrics and ratios\n  - `get_recommendation_trends` - Get analyst recommendation trends\n\n## Configuration\n\n### Required Environment Variables\n\n- `FINNHUB_API_KEY` - Your Finnhub API key (get one free at [finnhub.io](https://finnhub.io))\n\n### Optional Environment Variables\n\n- `PORT` - Server port (default: 8000)\n- `HOST` - Server host (default: 0.0.0.0)\n\n## Development\n\n### Requirements\n\n- Python 3.13+\n- FastMCP 2.11.2+\n- uv (for dependency management)\n- Finnhub API key\n\n### Setup\n\n```bash\n# Install dependencies\nuv sync\n\n# Set your API key\nexport FINNHUB_API_KEY=\"your_api_key_here\"\n\n# Run tests with proper async support\nuv run pytest\n\n# Run server locally (streamable-http transport)\nuv run python server.py\n```\n\nThe server will start on `http://localhost:8000` using the streamable-http transport. All tool interactions must go through the MCP protocol endpoint at `/mcp`.\n\n### Docker Build & Push\n\nUse the provided Makefile for common tasks:\n\n```bash\n# Run tests\nmake test\n\n# Build Docker image\nmake build\n\n# Push to registry (requires Docker Hub login)\nmake push\n\n# Test, build, and push\nmake all\n\n# Interactive version release\nmake release\n```\n\nManual Docker commands:\n\n```bash\n# Build image\ndocker build -t nimbletools/mcp-finnhub .\n\n# Run container with API key\ndocker run -e FINNHUB_API_KEY=\"your_api_key\" -p 8000:8000 nimbletools/mcp-finnhub\n\n# Push to Docker Hub\ndocker push nimbletools/mcp-finnhub\n```\n\n## Usage Examples\n\nAll tool interactions must use the MCP protocol. Here are examples of proper MCP requests:\n\n### Initialize MCP Session\n\nFirst, establish an MCP session to initialize the connection:\n\n```bash\ncurl -X POST http://localhost:8000/mcp \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"method\": \"initialize\",\n    \"params\": {\n      \"protocolVersion\": \"2024-11-05\",\n      \"capabilities\": {},\n      \"clientInfo\": {\n        \"name\": \"test-client\",\n        \"version\": \"1.0.0\"\n      }\n    }\n  }'\n```\n\n### List Available Tools\n\n```bash\ncurl -X POST http://localhost:8000/mcp \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 2,\n    \"method\": \"tools/list\"\n  }'\n```\n\n### Get Market News\n\n```bash\ncurl -X POST http://localhost:8000/mcp \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"method\": \"tools/call\",\n    \"params\": {\n      \"name\": \"get_market_news\",\n      \"arguments\": {\n        \"category\": \"general\"\n      }\n    }\n  }'\n```\n\n### Get Stock Quote\n\n```bash\ncurl -X POST http://localhost:8000/mcp \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 4,\n    \"method\": \"tools/call\",\n    \"params\": {\n      \"name\": \"get_stock_quote\",\n      \"arguments\": {\n        \"symbol\": \"AAPL\"\n      }\n    }\n  }'\n```\n\n### Get Company Profile\n\n```bash\ncurl -X POST http://localhost:8000/mcp \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 5,\n    \"method\": \"tools/call\",\n    \"params\": {\n      \"name\": \"get_company_profile\",\n      \"arguments\": {\n        \"symbol\": \"MSFT\"\n      }\n    }\n  }'\n```\n\n**Note**: Session management is required. You must initialize the MCP session before making tool calls. Each request should use unique `id` values to track responses properly.\n\n## Finnhub API\n\nThis server uses the [Finnhub API](https://finnhub.io) to provide financial data. You'll need a free API key to use this service.\n\n### Free Tier Limits\n\n- 60 API calls/minute\n- Basic stock data, news, and company information\n- Real-time US stock prices\n\n### Premium Features\n\n- Higher rate limits\n- More historical data\n- Advanced financial metrics\n- Global market coverage\n\n## About\n\nPart of the [NimbleTools](https://www.nimbletools.ai) ecosystem.\nFrom the makers of [NimbleBrain](https://www.nimblebrain.ai). \n\n## License\n\nMIT License - see [LICENSE](LICENSE) for details.\n",
  "fetchedAt": 1758568824678,
  "etag": "W/\"0cecf3ef7c8039632cf1d6e77072e7e9f307bfb2aca1d3faea5af8fef560dc5d\""
}